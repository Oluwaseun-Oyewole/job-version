
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum USER_TYPE {
 Employer
 JobSeeker
}

enum EXPERIENCE {
  Junior
  Intermediate
  Senior
  Lead
  Principal
}

enum JOB_MODE {
  Onsite
  Remote
  Hybrid
}

enum JOB_TYPE {
  Contract
  FullTime
  PartTime
  Volunteer
  Internship
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  created_at   DateTime  @default(now())
  image         String?
  accounts      Account[]
  jobs            Jobs[]
 
  @@map("users")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}


model Jobs{
  id                String @default(cuid()) @id
  job_title         String
  company_name      String
  company_logo     String?
  company_info      String?
  created_at        DateTime @default(now())
  salary            Int?
  job_description   String
  slug              String @unique
  skills            String?
  benefits           String?
  location          String?
  experience_level  EXPERIENCE?
  job_type          JOB_TYPE?
  job_mode          JOB_MODE?
  mode_of_submission String?
  user_id            String 
  no_of_hires       Int?
  user User @relation(fields:[user_id], references:[id], onDelete: Cascade)
  
  @@map(name:"jobs") 

}
